// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	rclone "otoclone/rclone"

	mock "github.com/stretchr/testify/mock"
)

// Cloner is an autogenerated mock type for the Cloner type
type Cloner struct {
	mock.Mock
}

// Copy provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *Cloner) Copy(_a0 string, _a1 string, _a2 string, _a3 rclone.Flags) error {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, rclone.Flags) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RemoteIsValid provides a mock function with given fields: _a0
func (_m *Cloner) RemoteIsValid(_a0 string) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Sync provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *Cloner) Sync(_a0 string, _a1 string, _a2 string, _a3 rclone.Flags) error {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, rclone.Flags) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
